# This is going to be our example Playbook which is written in YAML
#
# Your YAML Playbook FILE Starts after three Dashes (---)

---
# this is an example targetting host_a

- name: Playbook for nginx, nodejs, npm
  hosts: host_b
# used to define where this playbook will run

  gather_facts: yes
# Gathers facts/state of machine before running playbook

  become: true
# become is used to the root permission to perform tasks that may require admin access

  tasks:
  - name: Installing nginx, nodejs, npm
    apt:
      package:
        - nginx
        - nodejs
        - npm
      state: present


  - name: remove nginx default file from sites enabled (deleting a file)
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent

  - name: remove nginx from sites available
    file:
      path: /etc/nginx/sites-available/default
      state: absent

  # Create a file
  - name: create file in sites available
    file:
      path: /etc/nginx/sites-available/default.conf
      state: touch
      mode: 666

  # Write into the file
  - name: writing nginx config file
    blockinfile:
      path: /etc/nginx/sites-available/default.conf
      block: |
        server {
          listen 80;
          
          location / {
                 proxy_pass http://127.0.0.1:3000;
          }
         }


  # create a symbolic link
  - name: create a symbolic link between sites enabled and available
    file:
      src: /etc/nginx/sites-available/default.conf
      dest: /etc/nginx/sites-enabled/default.conf
      state: link
    notify:
    - Restart Ngnix
    - I am great


  # Start and enable nginx
  - name: start nginx
    service:
      name: nginx
      state: started
      enabled: yes

  # build notification system to restart nginx

  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

    - name: I am great
      file:
        path: ~/great_filipe_filipe.txt
        become_user: ubuntu
        state: touch


  # we need to manage sericess systemctl start nginx for example
  # Ansible has two ways to manager services
  #
  # The module service
  #
  # And we can also create a handler that will do actions to a service when a file is changes
  #
  #
  #
  #
  #
  #
# be mindful of indentation
# Each task should be specific
# One playbook can have many tasks
